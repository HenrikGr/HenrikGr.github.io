{"version":3,"file":"component---src-templates-articles-tags-template-js-b6b8329ed76609614b8a.js","mappings":";oOAiGA,UAnEA,YAA0E,IAA1CA,EAAyC,EAAzCA,YAAaC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SACrDC,GAAWC,EAAAA,EAAAA,KACTC,EAAQN,EAARM,IACAC,EAAUN,EAAKO,kBAAfD,MAIR,OACE,gBAAC,WAAD,KACE,gBAAC,IAAD,CACEE,MAAO,kBAAoBH,EAC3BI,YAAW,kBAAoBJ,EAC/BJ,SAAUA,EACVC,SAAUA,EACVC,SAAUA,IAEZ,gBAAC,IAAD,CAASO,GAAG,uBACZ,gBAAC,IAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC5B,gBAAC,IAAD,MACA,gBAAC,IAAD,CAAKH,GAAI,EAAGE,GAAI,GACd,gBAAC,IAAD,CAASE,QAAQ,eAEnB,gBAAC,IAAD,CAAoBT,MAAOA,EAAOL,SAAUA,KAE9C,gBAAC,IAAD,CAAQE,SAAUA,IAClB,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKa,MAAM,YAAY,aAAW,sBAChC,gBAAC,IAAD","sources":["webpack://hgc-ab/./src/templates/articles-tags-template.js"],"sourcesContent":["/*\r\n * @prettier\r\n * @copyright (c) 2019 - present, HGC-AB\r\n * @licence This source code is licensed under the MIT license described and found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react'\r\nimport { graphql } from 'gatsby'\r\n\r\nimport {Toolbar, Box, Fab, Divider} from '@material-ui/core'\r\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\"\r\n\r\n// Components\r\nimport SiteHeader from '../components/Headers/SiteHeader'\r\nimport FluidContainerList from \"../components/Lists/FluidContainerList\"\r\nimport ScrollTop from \"../components/ScrollTop/ScrollTop\"\r\nimport ArticlesTagsToolbar from '../components/Toolbars/ArticlesTagsToolbar'\r\nimport useSiteMetaData from '../data/useSiteMetaData'\r\nimport Footer from '../components/Footer/Footer'\r\n\r\n/**\r\n * ArticlesTagsTemplate template\r\n * @param pageContext\r\n * @param data\r\n * @param location\r\n * @param navigate\r\n * @returns {*}\r\n * @constructor\r\n */\r\nfunction ArticlesTagsTemplate({ pageContext, data, location, navigate }) {\r\n  const siteMeta = useSiteMetaData()\r\n  const { tag } = pageContext\r\n  const { edges } = data.allMarkdownRemark\r\n  //const { edges, totalCount } = data.allMarkdownRemark\r\n  //const description = `${totalCount} post${totalCount === 1 ? '' : 's'} tagged with \"${tag}\"`\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <SiteHeader\r\n        title={'Articles about ' + tag}\r\n        description={`Articles about ${tag}`}\r\n        location={location}\r\n        navigate={navigate}\r\n        siteMeta={siteMeta}\r\n      />\r\n      <Toolbar id=\"back-to-top-anchor\" />\r\n      <Box pt={8} pr={1} pb={2} pl={1}>\r\n        <ArticlesTagsToolbar />\r\n        <Box pt={1} pb={1}>\r\n          <Divider variant=\"fullWidth\" />\r\n        </Box>\r\n        <FluidContainerList edges={edges} location={location} />\r\n      </Box>\r\n      <Footer siteMeta={siteMeta}/>\r\n      <ScrollTop>\r\n        <Fab color=\"secondary\" aria-label=\"scroll back to top\">\r\n          <KeyboardArrowUpIcon />\r\n        </Fab>\r\n      </ScrollTop>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query tagQuery($tag: String) {\r\n    allMarkdownRemark(\r\n      filter: {\r\n        fileAbsolutePath: { regex: \"/(articles)/.*\\\\.md$/\" }\r\n        frontmatter: { tags: { in: [$tag] }, published: { ne: \"No\" } }\r\n      }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      limit: 400\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          excerpt(pruneLength: 160)\r\n          timeToRead\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n            subtitle\r\n            date(formatString: \"YYYY-MM-DD\")\r\n            publishedBy\r\n            image {\r\n              publicURL\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default ArticlesTagsTemplate\r\n"],"names":["pageContext","data","location","navigate","siteMeta","useSiteMetaData","tag","edges","allMarkdownRemark","title","description","id","pt","pr","pb","pl","variant","color"],"sourceRoot":""}