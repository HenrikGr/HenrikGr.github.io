{"version":3,"sources":["webpack:///./src/components/Footer/Copyright.js","webpack:///./src/components/Footer/Footer.js","webpack:///./src/pages/articles.js","webpack:///./src/data/useArticles.js"],"names":["Copyright","company","siteUrl","email","Fragment","Typography","variant","color","align","Date","getFullYear","Link","to","withStyles","theme","root","palette","common","white","backgroundColor","primary","main","marginTop","spacing","padding","classes","useSiteMetaData","contact","name","Box","className","gutterBottom","Articles","location","navigate","articles","useStaticQuery","allMarkdownRemark","edges","SiteHeader","title","Toolbar","id","pt","pr","pb","pl","FluidContainerList","Footer","ScrollTop","Fab","aria-label"],"mappings":"oKA4BeA,MAff,YAAgD,IAA3BC,EAA0B,EAA1BA,QACnB,OAD6C,EAAjBC,QAAiB,EAARC,MAEnC,kBAAC,IAAMC,SAAP,KACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,UAAUC,MAAM,UAC/C,gBACA,IAAIC,MAAOC,cAAe,IAC3B,kBAACC,EAAA,EAAD,CAAMJ,MAAM,UAAUK,GAAI,KACvBX,GACK,IACP,O,YC6BMY,iBA/BA,SAAAC,GAAK,MAAK,CACvBC,KAAM,CACJR,MAAOO,EAAME,QAAQC,OAAOC,MAC5BC,gBAAiBL,EAAME,QAAQI,QAAQC,KACvCC,UAAWR,EAAMS,QAAQ,GACzBC,QAASV,EAAMS,QAAQ,EAAG,OA0BfV,EAhBf,YAA8B,IAAZY,EAAW,EAAXA,QAAW,EAKvBC,cAHFxB,EAFyB,EAEzBA,QACAD,EAHyB,EAGzBA,QAHyB,IAIzB0B,QAAWC,EAJc,EAIdA,KAAMzB,EAJQ,EAIRA,MAEnB,OACE,kBAAC0B,EAAA,EAAD,CAAKC,UAAWL,EAAQV,MACtB,kBAACV,EAAA,EAAD,CAAYC,QAAQ,KAAKE,MAAM,SAASuB,cAAY,GACjDH,GAEH,kBAAC,EAAD,CAAW3B,QAASA,EAASC,QAASA,EAASC,MAAOA,S,uLCM7C6B,UArBf,YAA2C,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SACtBC,EClBFC,YAAe,cADjBC,kBAAqBC,MDqBvB,OACE,kBAAC,IAAMlC,SAAP,KACE,kBAACmC,EAAA,EAAD,CAAYC,MAAM,0BAA0BP,SAAUA,EAAUC,SAAUA,IAE1E,kBAACO,EAAA,EAAD,CAASC,GAAG,uBACZ,kBAACb,EAAA,EAAD,CAAKc,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC5B,kBAACC,EAAA,EAAD,CAAoBT,MAAOH,EAAUF,SAAUA,KAEjD,kBAACe,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK3C,MAAM,YAAY4C,aAAW,sBAChC,kBAAC,IAAD","file":"component---src-pages-articles-js-1dde94d22350e02d6be8.js","sourcesContent":["/*\r\n * @prettier\r\n * @copyright (c) 2019 - present, HGC-AB\r\n * @licence This source code is licensed under the MIT license described and found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react'\r\n\r\n// Material-ui\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Link from '../Links/Link'\r\n\r\nfunction Copyright({ company, siteUrl, email}) {\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"body2\" color=\"inherit\" align=\"center\">\r\n        {'Copyright Â© '}\r\n        {new Date().getFullYear()}{' '}\r\n        <Link color=\"inherit\" to={'/'}>\r\n          {company}\r\n        </Link>{' '}\r\n        {'.'}\r\n      </Typography>\r\n    </React.Fragment>\r\n)\r\n}\r\n\r\nexport default Copyright\r\n","/*\r\n * @prettier\r\n * @copyright (c) 2019 - present, HGC-AB\r\n * @licence This source code is licensed under the MIT license described and found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react'\r\n\r\n// material-ui\r\nimport Box from '@material-ui/core/Box'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { withStyles } from '@material-ui/core/styles'\r\n\r\n// custom component\r\nimport Copyright from './Copyright'\r\n\r\n// query site meta data\r\nimport useSiteMetaData from '../../data/useSiteMetaData'\r\n\r\n// Create style sheet\r\nconst styles = theme => ({\r\n  root: {\r\n    color: theme.palette.common.white,\r\n    backgroundColor: theme.palette.primary.main,\r\n    marginTop: theme.spacing(8),\r\n    padding: theme.spacing(6, 0)\r\n  }\r\n})\r\n\r\n/**\r\n * Footer component\r\n * @param props\r\n * @returns {*}\r\n * @constructor\r\n */\r\nfunction Footer({ classes }) {\r\n  const {\r\n    siteUrl,\r\n    company,\r\n    contact: { name, email }\r\n  } = useSiteMetaData()\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n        {name}\r\n      </Typography>\r\n      <Copyright company={company} siteUrl={siteUrl} email={email} />\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default withStyles(styles)(Footer)\r\n","/*\r\n * @prettier\r\n * @copyright (c) 2019 - present, HGC-AB\r\n * @licence This source code is licensed under the MIT license described and found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react'\r\n\r\n// material-ui\r\nimport Box from '@material-ui/core/Box'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Fab from '@material-ui/core/Fab'\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp'\r\n\r\n// custom component\r\nimport SiteHeader from '../components/Headers/SiteHeader'\r\nimport FluidContainerList from \"../components/Lists/FluidContainerList\"\r\nimport ScrollTop from '../components/ScrollTop/ScrollTop'\r\nimport Footer from '../components/Footer/Footer'\r\n\r\n// articles data query\r\nimport useArticles from '../data/useArticles'\r\n\r\n/**\r\n * Articles page\r\n * @param {Object} props - component properties\r\n * @param {Object} props.location - representing where the app is from a router perspective\r\n * @returns {*}\r\n * @constructor\r\n */\r\nfunction Articles({ location, navigate }) {\r\n  const articles = useArticles()\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <SiteHeader title=\"All article collections\" location={location} navigate={navigate} />\r\n      {/* target for scrollTop component */}\r\n      <Toolbar id=\"back-to-top-anchor\" />\r\n      <Box pt={8} pr={1} pb={2} pl={1}>\r\n        <FluidContainerList edges={articles} location={location} />\r\n      </Box>\r\n      <Footer />\r\n      <ScrollTop>\r\n        <Fab color=\"secondary\" aria-label=\"scroll back to top\">\r\n          <KeyboardArrowUpIcon />\r\n        </Fab>\r\n      </ScrollTop>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Articles\r\n","/*\r\n * @prettier\r\n * @copyright (c) 2019 - present, HGC-AB\r\n * @licence This source code is licensed under the MIT license described and found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport { useStaticQuery, graphql } from 'gatsby'\r\n\r\n/**\r\n * Articles data query used to retrieve a sorted list of articles that are published\r\n */\r\nexport default function useArticles() {\r\n  const {\r\n    allMarkdownRemark: { edges }\r\n  } = useStaticQuery(graphql`\r\n    query allPublishedArticles {\r\n      allMarkdownRemark(\r\n        filter: {\r\n          fileAbsolutePath: { regex: \"/(articles)/.*\\\\\\\\.md$/\" }\r\n          frontmatter: { published: { ne: \"No\" } }\r\n        }\r\n        sort: { fields: [frontmatter___date], order: DESC }\r\n      ) {\r\n        edges {\r\n          node {\r\n            excerpt(pruneLength: 160)\r\n            timeToRead\r\n            fields {\r\n              slug\r\n            }\r\n            frontmatter {\r\n              title\r\n              subtitle\r\n              date(formatString: \"YYYY-MM-DD\")\r\n              publishedBy\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return edges\r\n}\r\n"],"sourceRoot":""}