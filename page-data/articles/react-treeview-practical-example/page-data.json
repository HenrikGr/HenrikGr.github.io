{"componentChunkName":"component---src-templates-article-page-template-js","path":"/articles/react-treeview-practical-example/","result":{"data":{"markdownRemark":{"frontmatter":{"title":"TreeView component - a practical example","subtitle":"Article about creating a tree view component","date":"2019-11-18","publishedBy":"Henrik Grönvall","image":{"publicURL":"/static/tree-view-white-150-273084457eca10da0c1d81f56c3182cd.png"}},"excerpt":"In this article I will describe a practical example of when I created a tree view component for this web site - using\nGraphQL to query data from Gatsby…","timeToRead":4,"html":"<p>In this article I will describe a practical example of when I created a tree view component for this web site - using\nGraphQL to query data from Gatsby, JavaScript to transform the data structure into another data structure to be used\nin the tre view component.</p>\n<h1>TreeView component with React, Material-UI, GraphQL and JavaScript</h1>\n<h2>Getting data from Gatsby</h2>\n<p>When building with Gatsby, we access our data through a query language - GraphQL. GraphQL allows you to declarative\nexpress your data needs. This is done with queries, queries are the representation of the data you need.</p>\n<p>For example, I'm using static query hooks to get the data from Gatsby</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token comment\">/**\n * Function that query article data,\n * - filtering to include only articles that are published\n * - sorting articles in descending order\n * - format the date (published date) as long month and year only\n * @return [Array] edges - array of markdown edges\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">useArticlesByMonth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    allMarkdownRemark<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> edges <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useStaticQuery</span><span class=\"token punctuation\">(</span>graphql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n    query allArticlesByMonth {\n      allMarkdownRemark(\n        filter: {\n          fileAbsolutePath: { regex: \"/(articles)/.*\\\\\\\\.md$/\" }\n          frontmatter: { published: { ne: \"No\" } }\n        }\n        sort: { fields: [frontmatter___date], order: DESC }\n      ) {\n        edges {\n          node {\n            frontmatter {\n              title\n              date(formatString: \"MMMM, YYYY\")\n            }\n            fields {\n              slug\n            }\n          }\n        }\n      }\n    }\n  </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> edges\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>The data structure this query returns have a shape typical for GraphQL and Gatsby and is described next.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token comment\">/**\n * Data structure returned by GraphQL query\n */</span>\n<span class=\"token keyword\">const</span> edges <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    node<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      frontmatter<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        title<span class=\"token punctuation\">:</span> <span class=\"token string\">'Node.js worker threads'</span><span class=\"token punctuation\">,</span>\n<span class=\"gatsby-highlight-code-line\">        date<span class=\"token punctuation\">:</span> <span class=\"token string\">'November, 2019'</span></span>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      fields<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        slug<span class=\"token punctuation\">:</span> <span class=\"token string\">'/articles/nodejs-worker-threads/'</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    node<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      frontmatter<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        title<span class=\"token punctuation\">:</span> <span class=\"token string\">'JavaScript prototype'</span><span class=\"token punctuation\">,</span>\n<span class=\"gatsby-highlight-code-line\">        date<span class=\"token punctuation\">:</span> <span class=\"token string\">'November, 2019'</span></span>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      fields<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        slug<span class=\"token punctuation\">:</span> <span class=\"token string\">'/articles/js-object-explained/'</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    node<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      frontmatter<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        title<span class=\"token punctuation\">:</span> <span class=\"token string\">'Node.js architecture - overview'</span><span class=\"token punctuation\">,</span>\n<span class=\"gatsby-highlight-code-line\">        date<span class=\"token punctuation\">:</span> <span class=\"token string\">'January, 2018'</span></span>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      fields<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        slug<span class=\"token punctuation\">:</span> <span class=\"token string\">'/articles/nodejs-architecture-overview/'</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>The shape of the data structure is basically an array with objects and it is all nice and dandy, but pay attention to\nrow number 9, 18 and 27. </p>\n<p>When I'm creating the tree view component, the data structure will be different and we are\ngoing to need an object with keys for all date properties and array of objects for all titles and slugs for that key.</p>\n<h2>The tree view component</h2>\n<p>The tree view component is build using Material-UI's own TreeView and TreeItem components. When rendering the tre views\nwe want to traverse a data structure that fits our requirements. The desired data structure is;</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token comment\">/**\n * Data structure needed to render the tree view component\n */</span>\n<span class=\"token keyword\">const</span> articles <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  November<span class=\"token punctuation\">,</span> <span class=\"token number\">2019</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      title<span class=\"token punctuation\">:</span> <span class=\"token string\">'Node.js worker threads'</span><span class=\"token punctuation\">,</span>\n      slug<span class=\"token punctuation\">:</span> <span class=\"token string\">'/articles/nodejs-worker-threads/'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      title<span class=\"token punctuation\">:</span> <span class=\"token string\">'JavaScript prototype'</span><span class=\"token punctuation\">,</span>\n      slug<span class=\"token punctuation\">:</span> <span class=\"token string\">'/articles/js-object-explained/'</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  January<span class=\"token punctuation\">,</span> <span class=\"token number\">2018</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      title<span class=\"token punctuation\">:</span> <span class=\"token string\">'Node.js architecture - overview'</span><span class=\"token punctuation\">,</span>\n      slug<span class=\"token punctuation\">:</span> <span class=\"token string\">'/articles/nodejs-architecture-overview/'</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<blockquote>\n<p>A common pattern when transforming array of objects is using the reduce method of an array and transform the array to\nanother data structure. For example.</p>\n</blockquote>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token comment\">/**\n * Simple array of objects data structure\n */</span>\n<span class=\"token keyword\">const</span> people <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> firstname<span class=\"token punctuation\">:</span> <span class=\"token string\">'Kalle'</span><span class=\"token punctuation\">,</span> lastName<span class=\"token punctuation\">:</span> <span class=\"token string\">'Kula'</span><span class=\"token punctuation\">,</span> country<span class=\"token punctuation\">:</span> <span class=\"token string\">'Sweden'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> firstname<span class=\"token punctuation\">:</span> <span class=\"token string\">'Arne'</span><span class=\"token punctuation\">,</span> lastName<span class=\"token punctuation\">:</span> <span class=\"token string\">'Arneson'</span><span class=\"token punctuation\">,</span> country<span class=\"token punctuation\">:</span> <span class=\"token string\">'Finland'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> firstname<span class=\"token punctuation\">:</span> <span class=\"token string\">'Kajsa'</span><span class=\"token punctuation\">,</span> lastName<span class=\"token punctuation\">:</span> <span class=\"token string\">'Andersson'</span><span class=\"token punctuation\">,</span> country<span class=\"token punctuation\">:</span> <span class=\"token string\">'Sweden'</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\">/**\n * Function that transform an array into an object by a property\n * @param {Array} objectArray - array to be transformed\n * @param {String} property - the property to use for key(s) \n * @returns {*}\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">groupByProperty</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">objectArray<span class=\"token punctuation\">,</span> property</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> objectArray<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">acc<span class=\"token punctuation\">,</span> obj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>    <span class=\"token keyword\">const</span> key <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">[</span>property<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>acc<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      acc<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    acc<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> acc<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Transform the array into an object keyed by the country property</span>\n<span class=\"token keyword\">const</span> groupedPeople <span class=\"token operator\">=</span> <span class=\"token function\">groupByProperty</span><span class=\"token punctuation\">(</span>people<span class=\"token punctuation\">,</span> <span class=\"token string\">'country'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/*\n The variable groupedPeople will contain.\n\n{\n  Sweden: [\n    { firstname: 'Kalle', lastName: 'Kula', country: 'Sweden' },\n    { firstname: 'Kajsa', lastName: 'Andersson', country: 'Sweden' }\n  ],\n  Finland: [ \n    { firstname: 'Arne', lastName: 'Arneson', country: 'Finland' } \n  ]\n}\n*/</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h1>The solution</h1>\n<p>I did solve this in a similar way, however, my implementation is little different since the the original array of object\nis nested and the solution is shown below, combined with my GraphQL query function. </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token comment\">/**\n * Function that groups an array of object\n * @param edges\n * @returns {*}\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">groupByDate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">edges</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> edges<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">acc<span class=\"token punctuation\">,</span> edge</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Destruct current object to get the property</span>\n    <span class=\"token comment\">// I want use as a key</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> node<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> frontmatter<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> date <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> edge\n    \n    <span class=\"token comment\">// In this case, assign the date </span>\n    <span class=\"token comment\">// property as a key</span>\n    <span class=\"token keyword\">const</span> key <span class=\"token operator\">=</span> date\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>acc<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      acc<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Store common objects in an array for the key</span>\n    acc<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>edge<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">.</span>fields<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>edge<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">.</span>frontmatter <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> acc\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * Function that query article data,\n * - filtering to include only articles that are published\n * - sorting articles in descending order\n * - format the date (published date) as long month and year only\n * @return [Array] edges - array of markdown edges\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">useArticlesByMonth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    allMarkdownRemark<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> edges <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useStaticQuery</span><span class=\"token punctuation\">(</span>graphql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n    query allArticlesByMonth {\n      allMarkdownRemark(\n        filter: {\n          fileAbsolutePath: { regex: \"/(articles)/.*\\\\\\\\.md$/\" }\n          frontmatter: { published: { ne: \"No\" } }\n        }\n        sort: { fields: [frontmatter___date], order: DESC }\n      ) {\n        edges {\n          node {\n            frontmatter {\n              title\n              date(formatString: \"MMMM, YYYY\")\n            }\n            fields {\n              slug\n            }\n          }\n        }\n      }\n    }\n  </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">groupByDate</span><span class=\"token punctuation\">(</span>edges<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>That's it, now I'm using the useArticlesByMonth function to get the correct data and structure to the tree view\ncomponent. In the tree view component I iterate all keys (months) and render TreeItems in a parent children relations</p>\n<p>The React tree view component.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> useArticlesByMonth <span class=\"token keyword\">from</span> <span class=\"token string\">'../../src/data/useArticlesByMonth'</span>\n\n<span class=\"token comment\">/**\n * Function that renders a tre view component\n * @param {Function} navigate - router function to programmatically navigate\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">ArticlesTreeView</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> navigate <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Get the array of articles</span>\n  <span class=\"token keyword\">const</span> articlesByMonth <span class=\"token operator\">=</span> <span class=\"token function\">useArticlesByMonth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>TreeView<span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span><span class=\"token comment\">/* Iterate all keys (months) */</span><span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">{</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>articlesByMonth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">month<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">{</span><span class=\"token comment\">/* Get all nodes for the key (month) */</span><span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">const</span> nodes <span class=\"token operator\">=</span> articlesByMonth<span class=\"token punctuation\">[</span>month<span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n          <span class=\"token operator\">&lt;</span>TreeItem key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>index<span class=\"token punctuation\">}</span> nodeId<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>month<span class=\"token punctuation\">}</span> label<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>month<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n            <span class=\"token punctuation\">{</span>nodes<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> title<span class=\"token punctuation\">,</span> slug <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n              <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>TreeItem key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>slug<span class=\"token punctuation\">}</span> nodeId<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>slug<span class=\"token punctuation\">}</span> label<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>title<span class=\"token punctuation\">}</span> onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">navigate</span><span class=\"token punctuation\">(</span>slug<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>TreeItem<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>TreeView<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/articles/react-treeview-practical-example/"}}}