{"version":3,"sources":["webpack:///./src/templates/articles-tags-template.js","webpack:///./node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","webpack:///./node_modules/@material-ui/core/esm/CardActions/CardActions.js","webpack:///./src/components/Lists/ListCard.js","webpack:///./src/components/Lists/GridList.js"],"names":["query","ArticlesTagsTemplate","pageContext","data","location","navigate","tag","edges","allMarkdownRemark","Fragment","title","description","pt","pr","pb","pl","forwardRef","props","ref","action","avatar","classes","className","_props$component","component","Component","_props$disableTypogra","disableTypography","subheaderProp","subheader","subheaderTypographyProps","titleProp","titleTypographyProps","other","type","Typography","createElement","variant","display","color","root","content","withStyles","alignItems","padding","flex","marginRight","alignSelf","marginTop","name","_props$disableSpacing","disableSpacing","spacing","marginLeft","card","height","actions","justifyContent","cardMedia","titleText","textAlign","subtitle","excerpt","publishedDate","timeToRead","path","referrer","CardActionArea","Link","state","to","Card","CardContent","Box","Button","size","GridList","Grid","container","justify","map","edge","node","slug","fields","frontmatter","date","publishedBy","item","key","xs","sm","md","lg","pathname"],"mappings":"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","file":"component---src-templates-articles-tags-template-js-cb4f47c4cc9f5713930e.js","sourcesContent":["/*\r\n * @prettier\r\n * @copyright (c) 2019 - present, HGC-AB\r\n * @licence This source code is licensed under the MIT license described and found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react'\r\nimport { graphql } from 'gatsby'\r\n\r\nimport Box from '@material-ui/core/Box'\r\n\r\n// Components\r\nimport SiteHeader from '../components/Headers/SiteHeader'\r\nimport GridList from '../components/Lists/GridList'\r\n\r\n/**\r\n * ArticlesTagsTemplate template\r\n * @param pageContext\r\n * @param data\r\n * @param location\r\n * @param navigate\r\n * @returns {*}\r\n * @constructor\r\n */\r\nfunction ArticlesTagsTemplate({ pageContext, data, location, navigate }) {\r\n  const { tag } = pageContext\r\n  const { edges } = data.allMarkdownRemark\r\n  //const { edges, totalCount } = data.allMarkdownRemark\r\n  //const description = `${totalCount} post${totalCount === 1 ? '' : 's'} tagged with \"${tag}\"`\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <SiteHeader\r\n        title={'Articles about ' + tag}\r\n        description={`Articles about ${tag}`}\r\n        location={location}\r\n        navigate={navigate}\r\n      />\r\n      <Box pt={16} pr={2} pb={2} pl={2}>\r\n        <GridList edges={edges} location={location} />\r\n      </Box>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query tagQuery($tag: String) {\r\n    allMarkdownRemark(\r\n      filter: {\r\n        fileAbsolutePath: { regex: \"/(articles)/.*\\\\\\\\.md$/\" }\r\n        frontmatter: { tags: { in: [$tag] }, published: { ne: \"No\" } }\r\n      }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      limit: 400\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          excerpt(pruneLength: 160)\r\n          timeToRead\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n            subtitle\r\n            date(formatString: \"YYYY-MM-DD\")\r\n            publishedBy\r\n            image {\r\n              publicURL\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default ArticlesTagsTemplate\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","/*\r\n * @prettier\r\n * @copyright (c) 2019 - present, HGC-AB\r\n * @licence This source code is licensed under the MIT license described and found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react'\r\n\r\n// material-ui\r\nimport Box from '@material-ui/core/Box'\r\nimport Button from '@material-ui/core/Button'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardHeader from '@material-ui/core/CardHeader'\r\nimport CardActions from '@material-ui/core/CardActions'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport CardActionArea from '@material-ui/core/CardActionArea'\r\n\r\n// custom component\r\nimport Link from '../Links/Link'\r\n\r\nconst styles = {\r\n  card: {\r\n    height: '100%'\r\n  },\r\n  actions: {\r\n    justifyContent: 'space-between'\r\n  },\r\n  cardMedia: {\r\n    height: '150px'\r\n  },\r\n  titleText: {\r\n    textAlign: 'center'\r\n  }\r\n}\r\n\r\n/**\r\n * ListCard component\r\n * @param classes\r\n * @param title\r\n * @param subtitle\r\n * @param excerpt\r\n * @param publishedDate\r\n * @param timeToRead\r\n * @param path\r\n * @param referrer\r\n * @returns {*}\r\n * @constructor\r\n */\r\nfunction ListCard({\r\n  classes,\r\n  title,\r\n  subtitle,\r\n  excerpt,\r\n  publishedDate,\r\n  timeToRead,\r\n  path,\r\n  referrer\r\n}) {\r\n  return (\r\n    <CardActionArea component={Link} state={{ referrer: referrer }} to={path}>\r\n      <Card className={classes.card}>\r\n        <CardHeader\r\n          disableTypography={true}\r\n          title={<Typography variant=\"h6\" color=\"primary\">{title}</Typography>}\r\n          subheader={<Typography variant=\"body2\">{subtitle}</Typography>}\r\n        />\r\n        <CardContent>\r\n          <Typography variant=\"body2\">{excerpt}</Typography>\r\n        </CardContent>\r\n        <CardActions disableSpacing className={classes.actions}>\r\n          <Box component=\"div\">\r\n            <Typography component=\"div\" variant=\"caption\">\r\n              {'Date: ' + publishedDate}\r\n            </Typography>\r\n            <Typography component=\"div\" variant=\"caption\">\r\n              {'Time to read: ' + timeToRead + ' min'}\r\n            </Typography>\r\n          </Box>\r\n          <Box component=\"div\">\r\n            <Button size=\"small\" color=\"secondary\">\r\n              Read more ...\r\n            </Button>\r\n          </Box>\r\n        </CardActions>\r\n      </Card>\r\n    </CardActionArea>\r\n  )\r\n}\r\n\r\nexport default withStyles(styles)(ListCard)\r\n","/*\r\n * @prettier\r\n * @copyright (c) 2019 - present, HGC-AB\r\n * @licence This source code is licensed under the MIT license described and found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react'\r\n\r\n// material-ui\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\n// custom component\r\nimport ListCard from './ListCard'\r\n\r\n/**\r\n * Responsive GridList container component\r\n * @param edges\r\n * @param location\r\n * @returns {*}\r\n * @constructor\r\n */\r\nexport default function GridList({ edges, location }) {\r\n  return (\r\n    <Grid container spacing={2} justify=\"center\">\r\n      {edges.map(edge => {\r\n        const {\r\n          node: {\r\n            excerpt,\r\n            timeToRead,\r\n            fields: { slug },\r\n            frontmatter: {\r\n              title,\r\n              subtitle,\r\n              date,\r\n              publishedBy,\r\n            }\r\n          }\r\n        } = edge\r\n\r\n        return (\r\n          <Grid item key={slug} xs={12} sm={12} md={6} lg={4}>\r\n            <ListCard\r\n              title={title}\r\n              subtitle={subtitle}\r\n              excerpt={excerpt}\r\n              publishedDate={date}\r\n              publishedBy={publishedBy}\r\n              timeToRead={timeToRead}\r\n              path={slug}\r\n              referrer={location.pathname}\r\n            />\r\n          </Grid>\r\n        )\r\n      })}\r\n    </Grid>\r\n  )\r\n}\r\n"],"sourceRoot":""}