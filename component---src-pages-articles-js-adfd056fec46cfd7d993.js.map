{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","webpack:///./src/components/Hooks/useIntersect.js","webpack:///./src/components/Lists/IntersectionCard.js","webpack:///./src/components/Lists/FluidContainerList.js","webpack:///./src/pages/articles.js","webpack:///./src/data/useArticles.js","webpack:///./node_modules/@material-ui/core/esm/CardActions/CardActions.js"],"names":["CardHeader","forwardRef","props","ref","action","avatar","classes","className","_props$component","component","Component","_props$disableTypogra","disableTypography","subheaderProp","subheader","subheaderTypographyProps","titleProp","title","titleTypographyProps","other","type","createElement","variant","display","color","root","content","alignItems","padding","flex","marginRight","alignSelf","marginTop","name","useIntersect","target","rootMargin","threshold","useState","entry","updateEntry","observer","useRef","onIntersect","entries","forEach","intersectionRatio","useEffect","current","disconnect","IntersectionObserver","observe","buildThresholdArray","Array","from","keys","i","withStyles","card","height","margin","actions","justifyContent","cardMedia","titleText","textAlign","subtitle","excerpt","publishedDate","timeToRead","path","referrer","targetRef","CardActionArea","Link","state","to","style","opacity","Card","raised","Typography","CardContent","CardActions","disableSpacing","Box","Button","size","FluidContainerList","edges","location","Container","maxWidth","map","edge","node","slug","fields","frontmatter","date","publishedBy","key","pathname","Articles","navigate","articles","allMarkdownRemark","Fragment","SiteHeader","Toolbar","id","pt","pr","pb","pl","Footer","ScrollTop","Fab","aria-label","_props$disableSpacing","spacing","marginLeft"],"mappings":"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","file":"component---src-pages-articles-js-adfd056fec46cfd7d993.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","/**\r\n * @prettier\r\n * @copyright (c) 2019 - present, HGC-AB\r\n * @licence This source code is licensed under the MIT license described and found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport { useEffect, useRef, useState } from 'react'\r\n\r\n/**\r\n * Hook using InterSection observer\r\n * @param target\r\n * @param {Element} root - Element that is used as the viewport for checking visibility of the target.\r\n * Must be the ancestor of the target.\r\n * Defaults to the browser viewport if not specified or if null.\r\n * @param rootMargin - margin around the root. Can have values similar to the CSS margin property, e.g.\r\n * \"10px 20px 30px 40px\" (top, right, bottom, left). The values can be percentages. This set of\r\n * values serves to grow or shrink each side of the root element's bounding box before computing\r\n * intersections.\r\n * Defaults to all zeros.\r\n * @param threshold - Either a single number or an array of numbers which indicate at what percentage of\r\n * the target's visibility the observer's callback should be executed. If you only want to detect\r\n * when visibility passes the 50% mark, you can use a value of 0.5. If you want the callback to run\r\n * every time visibility passes another 25%, you would specify the array [0, 0.25, 0.5, 0.75, 1].\r\n * The default is 0 (meaning as soon as even one pixel is visible, the callback will be run).\r\n * A value of 1.0 means that the threshold isn't considered passed until every pixel is visible.\r\n */\r\nfunction useIntersect(target, { root = null, rootMargin = '0px', threshold = 0 }) {\r\n  const [entry, updateEntry] = useState({})\r\n  let observer = useRef(null)\r\n\r\n  function onIntersect(entries) {\r\n    entries.forEach(entry => {\r\n      updateEntry(entry)\r\n\r\n      if(entry.intersectionRatio === 0.1) {\r\n\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(observer.current) {\r\n      observer.current.disconnect()\r\n    }\r\n\r\n    observer.current = new IntersectionObserver(onIntersect, { root, rootMargin, threshold });\r\n    //const { current: currentObserver } = observer\r\n    //observer.current.disconnect()\r\n\r\n    if(target) {\r\n      observer.current.observe(target.current)\r\n    }\r\n\r\n    /**\r\n     * The function you return from the useEffect hook is run when the component is un-mounting,\r\n     * that way you can clean up things like disconnecting the observer, which is what we are doing\r\n     */\r\n    return () => observer.current.disconnect()\r\n\r\n  }, [target, root, rootMargin, threshold])\r\n\r\n  // Return ref to the node we observing\r\n  // and the observer entry stored in the state\r\n  return [entry]\r\n}\r\n\r\nexport default useIntersect\r\n","/**\r\n * @prettier\r\n * @copyright (c) 2019 - present, HGC-AB\r\n * @licence This source code is licensed under the MIT license described and found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { useRef } from 'react'\r\n\r\n// material-ui\r\nimport Box from '@material-ui/core/Box'\r\nimport Button from '@material-ui/core/Button'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardHeader from '@material-ui/core/CardHeader'\r\nimport CardActions from '@material-ui/core/CardActions'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport CardActionArea from '@material-ui/core/CardActionArea'\r\n\r\n// custom component\r\nimport Link from '../Links/Link'\r\nimport useIntersect from '../Hooks/useIntersect'\r\n\r\n/**\r\n * Build threshold array ranging from 0.01,0.02 - 0.99,1.00\r\n * @returns {number[]}\r\n */\r\nconst buildThresholdArray = () => Array.from(Array(100).keys(), i => i / 100)\r\n\r\nconst styles = {\r\n  card: {\r\n    height: '100%',\r\n    margin: '8px'\r\n  },\r\n  actions: {\r\n    justifyContent: 'space-between'\r\n  },\r\n  cardMedia: {\r\n    height: '150px'\r\n  },\r\n  titleText: {\r\n    textAlign: 'center'\r\n  }\r\n}\r\n\r\n/**\r\n * IntersectionCard component\r\n * @param classes\r\n * @param title\r\n * @param subtitle\r\n * @param excerpt\r\n * @param publishedDate\r\n * @param timeToRead\r\n * @param path\r\n * @param referrer\r\n * @returns {*}\r\n * @constructor\r\n */\r\nfunction IntersectionCard({ classes, title, subtitle, excerpt, publishedDate, timeToRead, path, referrer }) {\r\n  const targetRef = useRef(null)\r\n\r\n  // Initialize intersection observer\r\n  const [entry] = useIntersect(targetRef, {\r\n    threshold: buildThresholdArray()\r\n  })\r\n\r\n  return (\r\n    <CardActionArea\r\n      component={Link}\r\n      state={{ referrer: referrer }}\r\n      to={path}\r\n      ref={targetRef}\r\n      style={{ opacity: entry.intersectionRatio }}\r\n    >\r\n      <Card raised={entry.intersectionRatio === 1} className={classes.card}>\r\n        <CardHeader\r\n          disableTypography={true}\r\n          title={\r\n            <Typography variant=\"h6\" color=\"primary\">\r\n              {title}\r\n            </Typography>\r\n          }\r\n          subheader={<Typography variant=\"body2\">{subtitle}</Typography>}\r\n        />\r\n        <CardContent>\r\n          <Typography variant=\"body2\">{excerpt}</Typography>\r\n        </CardContent>\r\n        <CardActions disableSpacing className={classes.actions}>\r\n          <Box component=\"div\">\r\n            <Typography component=\"div\" variant=\"caption\">\r\n              {'Date: ' + publishedDate}\r\n            </Typography>\r\n            <Typography component=\"div\" variant=\"caption\">\r\n              {'Time to read: ' + timeToRead + ' min'}\r\n            </Typography>\r\n          </Box>\r\n          <Box component=\"div\">\r\n            <Button size=\"small\" color=\"secondary\">\r\n              Read more ...\r\n            </Button>\r\n          </Box>\r\n        </CardActions>\r\n      </Card>\r\n    </CardActionArea>\r\n  )\r\n}\r\n\r\nexport default withStyles(styles)(IntersectionCard)\r\n","/**\r\n * @prettier\r\n * @copyright (c) 2019 - present, HGC-AB\r\n * @licence This source code is licensed under the MIT license described and found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react'\r\n\r\n// material-ui\r\nimport Container from '@material-ui/core/Container'\r\n\r\n// custom component\r\nimport IntersectionCard from \"./IntersectionCard\"\r\n\r\n/**\r\n * Responsive FluidContainerList container component\r\n * @param edges\r\n * @param location\r\n * @returns {*}\r\n * @constructor\r\n */\r\nexport default function FluidContainerList({ edges, location }) {\r\n  return (\r\n    <Container maxWidth={\"md\"}>\r\n      {edges.map(edge => {\r\n        const {\r\n          node: {\r\n            excerpt,\r\n            timeToRead,\r\n            fields: { slug },\r\n            frontmatter: {\r\n              title,\r\n              subtitle,\r\n              date,\r\n              publishedBy,\r\n            }\r\n          }\r\n        } = edge\r\n\r\n        return (\r\n            <IntersectionCard\r\n              key={date}\r\n              title={title}\r\n              subtitle={subtitle}\r\n              excerpt={excerpt}\r\n              publishedDate={date}\r\n              publishedBy={publishedBy}\r\n              timeToRead={timeToRead}\r\n              path={slug}\r\n              referrer={location.pathname}\r\n            />\r\n        )\r\n      })}\r\n    </Container>\r\n  )\r\n}\r\n","/*\r\n * @prettier\r\n * @copyright (c) 2019 - present, HGC-AB\r\n * @licence This source code is licensed under the MIT license described and found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react'\r\n\r\n// material-ui\r\nimport Box from '@material-ui/core/Box'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Fab from '@material-ui/core/Fab'\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp'\r\n\r\n// custom component\r\nimport SiteHeader from '../components/Headers/SiteHeader'\r\n//import GridList from '../components/Lists/GridList'\r\nimport FluidContainerList from \"../components/Lists/FluidContainerList\"\r\nimport ScrollTop from '../components/ScrollTop/ScrollTop'\r\nimport Footer from '../components/Footer/Footer'\r\n\r\n// articles data query\r\nimport useArticles from '../data/useArticles'\r\n\r\n/**\r\n * Articles page\r\n * @param {Object} props - component properties\r\n * @param {Object} props.location - representing where the app is from a router perspective\r\n * @returns {*}\r\n * @constructor\r\n */\r\nfunction Articles({ location, navigate }) {\r\n  const articles = useArticles()\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <SiteHeader title=\"All article collections\" location={location} navigate={navigate} />\r\n      {/* target for scrollTop component */}\r\n      <Toolbar id=\"back-to-top-anchor\" />\r\n      <Box pt={8} pr={2} pb={2} pl={2}>\r\n        <FluidContainerList edges={articles} location={location} />\r\n      </Box>\r\n      <Footer />\r\n      <ScrollTop>\r\n        <Fab color=\"secondary\" aria-label=\"scroll back to top\">\r\n          <KeyboardArrowUpIcon />\r\n        </Fab>\r\n      </ScrollTop>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Articles\r\n","/*\r\n * @prettier\r\n * @copyright (c) 2019 - present, HGC-AB\r\n * @licence This source code is licensed under the MIT license described and found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport { useStaticQuery, graphql } from 'gatsby'\r\n\r\n/**\r\n * Articles data query used to retrieve a sorted list of articles that are published\r\n */\r\nexport default function useArticles() {\r\n  const {\r\n    allMarkdownRemark: { edges }\r\n  } = useStaticQuery(graphql`\r\n    query allPublishedArticles {\r\n      allMarkdownRemark(\r\n        filter: {\r\n          fileAbsolutePath: { regex: \"/(articles)/.*\\\\\\\\.md$/\" }\r\n          frontmatter: { published: { ne: \"No\" } }\r\n        }\r\n        sort: { fields: [frontmatter___date], order: DESC }\r\n      ) {\r\n        edges {\r\n          node {\r\n            excerpt(pruneLength: 160)\r\n            timeToRead\r\n            fields {\r\n              slug\r\n            }\r\n            frontmatter {\r\n              title\r\n              subtitle\r\n              date(formatString: \"YYYY-MM-DD\")\r\n              publishedBy\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return edges\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);"],"sourceRoot":""}