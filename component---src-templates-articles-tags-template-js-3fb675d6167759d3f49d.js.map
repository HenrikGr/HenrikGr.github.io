{"version":3,"sources":["webpack://hgc-ab/./node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","webpack://hgc-ab/./node_modules/@material-ui/core/esm/CardActions/CardActions.js","webpack://hgc-ab/./src/components/Lists/IntersectionCard.js","webpack://hgc-ab/./src/components/Lists/FluidContainerList.js","webpack://hgc-ab/./src/templates/articles-tags-template.js"],"names":["CardHeader","props","ref","action","avatar","classes","className","_props$component","component","Component","_props$disableTypogra","disableTypography","subheaderProp","subheader","subheaderTypographyProps","titleProp","title","titleTypographyProps","other","type","Typography","variant","display","color","root","content","withStyles","alignItems","padding","flex","marginRight","alignSelf","marginTop","name","CardActions","_props$disableSpacing","disableSpacing","spacing","marginLeft","buildThresholdList","numSteps","thresholds","i","ratio","push","card","height","actions","justifyContent","cardMedia","titleText","textAlign","subtitle","excerpt","publishedDate","timeToRead","path","referrer","targetRef","useRef","useState","entry","updateEntry","handleIntersections","entries","forEach","isIntersecting","useEffect","observer","IntersectionObserver","rootMargin","threshold","current","observe","disconnect","CardActionArea","Link","state","to","style","opacity","intersectionRatio","marginBottom","Card","raised","CardContent","Box","Button","size","FluidContainerList","edges","location","Container","maxWidth","disableGutters","map","edge","node","slug","fields","frontmatter","date","publishedBy","key","pathname","pageContext","data","navigate","siteMeta","useSiteMetaData","tag","allMarkdownRemark","description","id","pt","pr","pb","pl","aria-label"],"mappings":"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","file":"component---src-templates-articles-tags-template-js-3fb675d6167759d3f49d.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","/**\n * @prettier\n * @copyright (c) 2019 - present, HGC-AB\n * @licence This source code is licensed under the MIT license described and found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { useEffect, useRef, useState } from 'react'\n\n// material-ui\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  CardActions,\n  CardContent,\n  Typography,\n  CardActionArea,\n  withStyles,\n} from '@material-ui/core'\n\n// custom component\nimport Link from '../Links/Link'\n\n// Build threshold array\nfunction buildThresholdList(numSteps = 10) {\n  let thresholds = []\n\n  for (let i = 1.0; i <= numSteps; i++) {\n    let ratio = i / numSteps\n    thresholds.push(ratio)\n  }\n\n  thresholds.push(0)\n  return thresholds\n}\n\nconst styles = {\n  card: {\n    height: '100%',\n    //    marginBottom: '8px'\n  },\n  actions: {\n    justifyContent: 'space-between',\n  },\n  cardMedia: {\n    height: '150px',\n  },\n  titleText: {\n    textAlign: 'center',\n  },\n}\n\n/**\n * IntersectionCard component\n * @param classes\n * @param title\n * @param subtitle\n * @param excerpt\n * @param publishedDate\n * @param timeToRead\n * @param path\n * @param referrer\n * @returns {*}\n * @constructor\n */\nfunction IntersectionCard({ classes, title, subtitle, excerpt, publishedDate, timeToRead, path, referrer }) {\n  const targetRef = useRef(null)\n\n  // state management for intersection information\n  const [entry, updateEntry] = useState({})\n\n  /**\n   * Observer callback - deals with intersection data\n   * @param entries\n   */\n  function handleIntersections(entries) {\n    entries.forEach((entry) => {\n      // update local state with intersecting data\n      if (entry.isIntersecting) {\n        updateEntry(entry)\n      }\n    })\n  }\n\n  /**\n   * React's built-in useEffect hook has a second argument called the \"dependencies array\" and it allows you\n   * to optimize when React will call your effect callback. React will do a comparison between each of the\n   * values (via Object.is) to determine whether your effect callback should be called.\n   */\n  useEffect(() => {\n    /**\n     * Create a new observer\n     * @type {IntersectionObserver}\n     */\n    const observer = new IntersectionObserver(handleIntersections, {\n      root: null,\n      rootMargin: '0px',\n      threshold: buildThresholdList(),\n    })\n\n    // Start observe the target\n    if (targetRef.current) {\n      observer.observe(targetRef.current)\n    }\n\n    /**\n     * Clean up the observer on un-mounting\n     */\n    return () => observer.disconnect()\n  }, [targetRef])\n\n  return (\n    <CardActionArea\n      ref={targetRef}\n      component={Link}\n      state={{ referrer: referrer }}\n      to={path}\n      style={{ opacity: entry && entry.intersectionRatio, marginBottom: '8px' }}\n    >\n      <Card raised={entry && entry.intersectionRatio === 1} className={classes.card}>\n        <CardHeader\n          disableTypography={true}\n          title={\n            <Typography variant=\"h6\" color=\"textPrimary\">\n              {title}\n            </Typography>\n          }\n          subheader={\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              {subtitle}\n            </Typography>\n          }\n        />\n        <CardContent>\n          <Typography variant=\"body2\">{excerpt}</Typography>\n        </CardContent>\n        <CardActions disableSpacing className={classes.actions}>\n          <Box component=\"div\">\n            <Typography component=\"div\" variant=\"caption\">\n              {'Date: ' + publishedDate}\n            </Typography>\n            <Typography component=\"div\" variant=\"caption\">\n              {'Time to read: ' + timeToRead + ' min'}\n            </Typography>\n          </Box>\n          <Box component=\"div\">\n            <Button size=\"small\" color=\"secondary\">\n              Read more ...\n            </Button>\n          </Box>\n        </CardActions>\n      </Card>\n    </CardActionArea>\n  )\n}\n\nexport default withStyles(styles)(IntersectionCard)\n","/**\r\n * @prettier\r\n * @copyright (c) 2019 - present, HGC-AB\r\n * @licence This source code is licensed under the MIT license described and found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react'\r\n\r\n// material-ui\r\nimport { Container } from '@material-ui/core'\r\n\r\n// custom component\r\nimport IntersectionCard from \"./IntersectionCard\"\r\n\r\n/**\r\n * Responsive FluidContainerList container component\r\n * @param edges\r\n * @param location\r\n * @returns {*}\r\n * @constructor\r\n */\r\nexport default function FluidContainerList({ edges, location }) {\r\n  return (\r\n    <Container maxWidth={\"md\"} disableGutters={false}>\r\n      {edges.map(edge => {\r\n        const {\r\n          node: {\r\n            excerpt,\r\n            timeToRead,\r\n            fields: { slug },\r\n            frontmatter: {\r\n              title,\r\n              subtitle,\r\n              date,\r\n              publishedBy,\r\n            }\r\n          }\r\n        } = edge\r\n\r\n        return (\r\n            <IntersectionCard\r\n              key={slug}\r\n              title={title}\r\n              subtitle={subtitle}\r\n              excerpt={excerpt}\r\n              publishedDate={date}\r\n              publishedBy={publishedBy}\r\n              timeToRead={timeToRead}\r\n              path={slug}\r\n              referrer={location.pathname}\r\n            />\r\n        )\r\n      })}\r\n    </Container>\r\n  )\r\n}\r\n","/*\r\n * @prettier\r\n * @copyright (c) 2019 - present, HGC-AB\r\n * @licence This source code is licensed under the MIT license described and found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react'\r\nimport { graphql } from 'gatsby'\r\n\r\nimport {Toolbar, Box, Fab, Divider} from '@material-ui/core'\r\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\"\r\n\r\n// Components\r\nimport SiteHeader from '../components/Headers/SiteHeader'\r\nimport FluidContainerList from \"../components/Lists/FluidContainerList\"\r\nimport ScrollTop from \"../components/ScrollTop/ScrollTop\"\r\nimport ArticlesTagsToolbar from '../components/LandingPage/ArticlesTagsToolbar'\r\nimport useSiteMetaData from '../data/useSiteMetaData'\r\nimport Footer from '../components/Footer/Footer'\r\n\r\n/**\r\n * ArticlesTagsTemplate template\r\n * @param pageContext\r\n * @param data\r\n * @param location\r\n * @param navigate\r\n * @returns {*}\r\n * @constructor\r\n */\r\nfunction ArticlesTagsTemplate({ pageContext, data, location, navigate }) {\r\n  const siteMeta = useSiteMetaData()\r\n  const { tag } = pageContext\r\n  const { edges } = data.allMarkdownRemark\r\n  //const { edges, totalCount } = data.allMarkdownRemark\r\n  //const description = `${totalCount} post${totalCount === 1 ? '' : 's'} tagged with \"${tag}\"`\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <SiteHeader\r\n        title={'Articles about ' + tag}\r\n        description={`Articles about ${tag}`}\r\n        location={location}\r\n        navigate={navigate}\r\n        siteMeta={siteMeta}\r\n      />\r\n      <Toolbar id=\"back-to-top-anchor\" />\r\n      <Box pt={8} pr={1} pb={2} pl={1}>\r\n        <ArticlesTagsToolbar />\r\n        <Box pt={1} pb={1}>\r\n          <Divider variant=\"fullWidth\" />\r\n        </Box>\r\n        <FluidContainerList edges={edges} location={location} />\r\n      </Box>\r\n      <Footer siteMeta={siteMeta}/>\r\n      <ScrollTop>\r\n        <Fab color=\"secondary\" aria-label=\"scroll back to top\">\r\n          <KeyboardArrowUpIcon />\r\n        </Fab>\r\n      </ScrollTop>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query tagQuery($tag: String) {\r\n    allMarkdownRemark(\r\n      filter: {\r\n        fileAbsolutePath: { regex: \"/(articles)/.*\\\\.md$/\" }\r\n        frontmatter: { tags: { in: [$tag] }, published: { ne: \"No\" } }\r\n      }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      limit: 400\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          excerpt(pruneLength: 160)\r\n          timeToRead\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n            subtitle\r\n            date(formatString: \"YYYY-MM-DD\")\r\n            publishedBy\r\n            image {\r\n              publicURL\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default ArticlesTagsTemplate\r\n"],"sourceRoot":""}